{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"injam.samples.js","sourcesContent":["var injamSdk = require('injam-sdk')\n\n\n\nwindow.markers = []\n\n\n\n// Put your physical id and application key\n\nwindow.credentials = {\n    physical_id: 'YOUR_PHYSICAL_ID',\n    channels: [],\n    application_key: 'YOUR_APPLICATION_KEY'\n}\n\n\n\n// Some locations\n\nwindow.Asia = {\n    lat: 23.800029,\n    lng: 62.4289998\n}\n\n\n\n// Google Maps Sample\n\nwindow.connectForGoogleMaps = function() {\n\n    // Connect to Injam\n\n    window.injam = new Injam(credentials)\n    injam.connect()\n\n    injam.on('subscribed', function (channel) {\n        M.toast({html: 'Subscribed ' + channel})\n    })\n\n    injam.on('unsubscribed', function (channel) {\n        M.toast({html: 'Unsubscribed ' + channel})\n    })\n\n\n    // Showing devices on Google Maps by markers when receiving location data\n\n    injam.on('tracking', function (data) {\n        if (markers[data.channel]) {\n            var latlng = new google.maps.LatLng(data.location.lat, data.location.lng)\n            markers[data.channel].setPosition(latlng)\n            // Uncomment below if you want lock to one marker\n            // map.panTo(latlng)\n        } else {\n            addMarkerGMaps(data.channel, {lat: data.location.lat, lng: data.location.lng}, map)\n            var latlng = new google.maps.LatLng(data.location.lat, data.location.lng)\n            markers[data.channel].setPosition(latlng)\n            map.panTo(latlng)\n        }\n    })\n\n\n    // Google Map init\n\n    window.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 3,\n        center: Asia,\n        scrollwheel: false,\n        navigationControl: false,\n        mapTypeControl: false,\n        scaleControl: false,\n        fullscreenControl: true,\n        streetViewControl: false\n    })\n\n}\n\n\n\n// Most useful Google Maps functions\n\nwindow.addMarkerGMaps = function(id, location, map) {\n    markers[id] = new google.maps.Marker({\n        map: map,\n        animation: google.maps.Animation.DROP,\n        position: location,\n        title: id\n    })\n}\n\nwindow.setMapOnAllGMaps = function(map) {\n    for (var i = 0; i < window.Markers.length; i++) {\n        markers[i].setMap(map)\n    }\n}\n\nwindow.clearMarkersGMaps = function() {\n    setMapOnAllGMaps(null)\n}\n\nwindow.deleteMarkersGMaps = function() {\n    clearMarkersGMaps()\n    markers = []\n}\n\n\n\n// Open Street Map Sample\n\nwindow.connectForOpenStreetMap = function() {\n\n}\n\n\n\n// Messaging Sample\n\nwindow.connectForMessaging = function() {\n\n    // Connect to Injam\n\n    window.injam = new Injam(credentials)\n    injam.connect()\n\n    injam.on('subscribed', function (channel) {\n        M.toast({html: 'Subscribed ' + channel})\n    })\n\n    injam.on('unsubscribed', function (channel) {\n        M.toast({html: 'Unsubscribed ' + channel})\n    })\n\n    injam.on('rawData', function (data) {\n        var message = data.data || data.message || data.body\n        $('#board .messages').prepend('<div class=\"message-holder\"><div class=\"message\">'\n        + '<span class=\"title\">' + data.channel + '</span>'\n        + '<p class=\"body\">' + message + '</p>'\n        + '</div></div>')\n    })\n\n}\n\nif ($('#board').length) {\n    connectForMessaging()\n}\n\n\n\n// Subscribe\n\n$('.sub').on('click', function(e) {\n    e.preventDefault()\n    var channel = $('#subscription').val()\n    if (channel != '')\n        injam.subscribe(channel)\n})\n\n\n\n// Unsubscribe\n\n$('.unsub').on('click', function(e) {\n    e.preventDefault()\n    var channel = $('#subscription').val()\n    if (channel != '')\n        injam.unsubscribe(channel)\n})\n\n\n\n// Send Data\n\n$('.send').on('click', function(e) {\n    e.preventDefault()\n    var data = $('#data').val()\n    if (data != '')\n        injam.publish(data)\n})"]}